digraph G {

 subgraph cluster_minishell{
     style=filled;
	color=lightgrey;
    label=minishell;
     a [label="Inicio"];
     b [label="Tamaño de buffer"];
     c [label="Print msh>"];
     d [label="Leer entrada estandar"];
          a ->b->c->d;
     
     subgraph cluster_comandoCD{
          style=filled;
	color=lightblue;
    label=comandoCD;
     e [label="Inicio"];
     f [label="Si el argumento está vacio o no"];
     g [label="Ir a home"];
     g1 [label="Ir al directorio indicado"];
     g2 [label="Mostrar error"];
     d->e;
     e->f->g;
     f->g1;
     g1->g2;
     g->g2;
     }
     subgraph cluster_Ncomandos{
                      style=filled;
	color=chartreuse;
    label=Ncomandos;
     d->h
     subgraph cluster_entrada{
                                 style=filled;
	color=chartreuse3;
    label=entrada;
     h [label="Mirar si tiene entrada de fichero"];
     h1 [label="Poner como primer comando cat fichero"];
     h2 [label="Leer de entrada estandar"];
     
         h->h1,h2;
     }
     subgraph cluster_ComportamientoEstandar{
        style=filled;
	color=chocolate;
    label=ComportamientoEstandar;
    h1,h2->i;
    ia3[label="crear pipes"]
 
     i [label="Crear array[2] de pipes"]
     
     ib [label="Crear 1 int"];
     ic[label="Fork"]
     
     while[label="Mientras no sea el último comando"];
     ult[label="Es el último comando"];
    
     ult2[label="Ejecuto el comando"]
     ult3[label="exit"]
     ult4[label="si hay un fichero de salida redirijo la salida"]
     ult->ult4->ult2->ult3;
     i->ib->ia3->while->ic->senal,proceHijo1;
     while->ult
     subgraph cluster_procesoPadre{
         style=filled;
	color=chocolate2;
    label=procesoPadre;
    senal[label="Recibir señal de que el hijo está listo para recibir"]
    procePadre1[label="Ejecutar comando indicado por el int"];
    procePadre2[label="Enviar datos por el pipe"];
    procePadre3[label="Enviar señal de finalización al hijo"];
    procePadre4[label="wait()"];
     senal->procePadre1->procePadre2->procePadre3->procePadre4;
     }
     subgraph cluster_procesoHijo{
        style=filled;
	color=chocolate2;
        label=procesoHijo;
        proceHijo1[label="int+=1"];
        proceHijo2[label="desplazar pipes hacia la izq"];
        ia [label="Crear 1 pipe"];
        ia2[label="Añadir el pipe al array de pipes"];
        proceHijo1->proceHijo2->ia->ia2->while;
     }

     p [label="borrar pipes"]
     o [label="exit"]
     procePadre4->p->o
     }
}
}
}
